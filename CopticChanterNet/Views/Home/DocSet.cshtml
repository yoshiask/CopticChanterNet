@model DocSetViewModel

@using CoptLib.Models
@using CoptLib.Models.Text;
@using CoptLib.Writing;
@using CopticChanterNet.Models

@{
    Model.LoadSetCommand.Execute(null);
    ViewData["Title"] = Model.Title;
}

@functions
{
        string HandleInline(Inline inline)
        {
            (string css, List<string> cl) = HandleText(inline);
            var cls = string.Join(' ', cl);
            string inner;

            switch (inline)
            {
                case Span span:
                    inner = string.Join(string.Empty, span.Inlines.Select(HandleInline));
                    break;

                default:
                    inner = inline.ToString()!;
                    break;

            }

            return $"<span class=\"{cls}\" style=\"{css}\">{inner}</span>";
        }

        (string css, List<string> cl) HandleText(object item)
        {
            string css = string.Empty;
            List<string> classes = new();

            if (item is IMultilingual multi)
            {
                LanguageInfo langInfo = multi.Language?.Secondary
                    ?? multi.Language
                    ?? LanguageInfo.Default;

                var culture = langInfo.Culture;
                if (culture != null)
                {
                    if (culture.TextInfo.IsRightToLeft == true)
                        css += "direction: rtl;";
                }

                classes.Add(langInfo.Known.ToString().ToLowerInvariant());
            }

            if (item is Comment)
            {
                classes.Add("comment");
            }

            return (css, classes);
        }
}

<h1>@(Model.Title)</h1>

<table>
    @{
        bool isNewDoc = false;

        @foreach (var row in Model.Layout)
        {
            if (row.Count == 1 && row[0] is Doc)
            {
                // Set flag so the title of the translations
                // can be displayed in bold font
                isNewDoc = true;
                continue;
            }

            <tr>
                @foreach (var cell in row)
                {
                    object item = cell;
                    string css = string.Empty;
                    string? text = null;
                    List<string> cl = new();

                    if (item is Section section)
                    {
                        item = section.Title;
                        cl.Add(isNewDoc ? "docName" : "sectionTitle");
                    }

                    if (item is IContent content)
                    {
                        if (content.Inlines.Count == 1 && content.Inlines[0] is Run singleRun)
                        {
                            // Avoid using multiple inlines when Text can be used directly
                            text = singleRun.Text;
                        }
                        else
                        {
                            // Convert the CoptLib InlineCollection to HTML
                            foreach (Inline inline in content.Inlines)
                            {
                                HandleInline(inline);
                            }
                        }
                    }

                    // Handle language & font
                    text ??= item?.ToString();
                    (var css2, var cl2) = HandleText(item);
                    css += css2;
                    cl.AddRange(cl2);

                    if (text != null)
                    {
                        <td class="@string.Join(' ', cl)" style="@css">@text</td>
                    }
                }
            </tr>

            isNewDoc = false;
        }
    }
</table>
